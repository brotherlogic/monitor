syntax = "proto3";

package monitor;

import "github.com/brotherlogic/discovery/proto/discovery.proto";

enum LogLevel {
  DISCARD = 0;
  KEEP_FOREVER = 1;
}

message MessageLog {
  // The entry writing the log
  discovery.RegistryEntry entry = 1;

  // The message to be written to the logs
  string message = 2;

  // The timestamp of the written log
  int64 timestamps = 3;

  // The level of this log
  LogLevel level = 4;
}

message LogWriteResponse {
  // Whether the log was written
  bool success = 1;

  //The timestamp at which the log was written
  int64 timestamp = 2;
}

message MessageLogReadResponse {
  // The response from the logs
  repeated MessageLog logs = 1;
}


service MonitorService {
        rpc WriteMessageLog(MessageLog) returns (LogWriteResponse) {}
        rpc ReadMessageLogs (discovery.RegistryEntry) returns (MessageLogReadResponse) {}
}
