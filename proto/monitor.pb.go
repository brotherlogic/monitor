// Code generated by protoc-gen-go. DO NOT EDIT.
// source: monitor.proto

package monitor

import (
	fmt "fmt"
	proto1 "github.com/brotherlogic/discovery/proto"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogLevel int32

const (
	LogLevel_DISCARD   LogLevel = 0
	LogLevel_KEEP_WEEK LogLevel = 1
)

var LogLevel_name = map[int32]string{
	0: "DISCARD",
	1: "KEEP_WEEK",
}

var LogLevel_value = map[string]int32{
	"DISCARD":   0,
	"KEEP_WEEK": 1,
}

func (x LogLevel) String() string {
	return proto.EnumName(LogLevel_name, int32(x))
}

func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{0}
}

type Config struct {
	Logs                 []*MessageLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetLogs() []*MessageLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

type MessageLog struct {
	// The entry writing the log
	Entry *proto1.RegistryEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// The message to be written to the logs
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The timestamp of the written log
	Timestamps int64 `protobuf:"varint,3,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	// The level of this log
	Level                LogLevel `protobuf:"varint,4,opt,name=level,proto3,enum=monitor.LogLevel" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageLog) Reset()         { *m = MessageLog{} }
func (m *MessageLog) String() string { return proto.CompactTextString(m) }
func (*MessageLog) ProtoMessage()    {}
func (*MessageLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{1}
}

func (m *MessageLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageLog.Unmarshal(m, b)
}
func (m *MessageLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageLog.Marshal(b, m, deterministic)
}
func (m *MessageLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageLog.Merge(m, src)
}
func (m *MessageLog) XXX_Size() int {
	return xxx_messageInfo_MessageLog.Size(m)
}
func (m *MessageLog) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageLog.DiscardUnknown(m)
}

var xxx_messageInfo_MessageLog proto.InternalMessageInfo

func (m *MessageLog) GetEntry() *proto1.RegistryEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *MessageLog) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MessageLog) GetTimestamps() int64 {
	if m != nil {
		return m.Timestamps
	}
	return 0
}

func (m *MessageLog) GetLevel() LogLevel {
	if m != nil {
		return m.Level
	}
	return LogLevel_DISCARD
}

type LogWriteResponse struct {
	// Whether the log was written
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	//The timestamp at which the log was written
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogWriteResponse) Reset()         { *m = LogWriteResponse{} }
func (m *LogWriteResponse) String() string { return proto.CompactTextString(m) }
func (*LogWriteResponse) ProtoMessage()    {}
func (*LogWriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{2}
}

func (m *LogWriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogWriteResponse.Unmarshal(m, b)
}
func (m *LogWriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogWriteResponse.Marshal(b, m, deterministic)
}
func (m *LogWriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogWriteResponse.Merge(m, src)
}
func (m *LogWriteResponse) XXX_Size() int {
	return xxx_messageInfo_LogWriteResponse.Size(m)
}
func (m *LogWriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogWriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogWriteResponse proto.InternalMessageInfo

func (m *LogWriteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *LogWriteResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type MessageLogReadResponse struct {
	// The response from the logs
	Logs                 []*MessageLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MessageLogReadResponse) Reset()         { *m = MessageLogReadResponse{} }
func (m *MessageLogReadResponse) String() string { return proto.CompactTextString(m) }
func (*MessageLogReadResponse) ProtoMessage()    {}
func (*MessageLogReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{3}
}

func (m *MessageLogReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageLogReadResponse.Unmarshal(m, b)
}
func (m *MessageLogReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageLogReadResponse.Marshal(b, m, deterministic)
}
func (m *MessageLogReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageLogReadResponse.Merge(m, src)
}
func (m *MessageLogReadResponse) XXX_Size() int {
	return xxx_messageInfo_MessageLogReadResponse.Size(m)
}
func (m *MessageLogReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageLogReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageLogReadResponse proto.InternalMessageInfo

func (m *MessageLogReadResponse) GetLogs() []*MessageLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

func init() {
	proto.RegisterEnum("monitor.LogLevel", LogLevel_name, LogLevel_value)
	proto.RegisterType((*Config)(nil), "monitor.Config")
	proto.RegisterType((*MessageLog)(nil), "monitor.MessageLog")
	proto.RegisterType((*LogWriteResponse)(nil), "monitor.LogWriteResponse")
	proto.RegisterType((*MessageLogReadResponse)(nil), "monitor.MessageLogReadResponse")
}

func init() { proto.RegisterFile("monitor.proto", fileDescriptor_44174b7b2a306b71) }

var fileDescriptor_44174b7b2a306b71 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcb, 0xce, 0xd2, 0x40,
	0x14, 0x66, 0xec, 0xcf, 0xed, 0x10, 0x2e, 0x8e, 0x89, 0xa9, 0xc4, 0x68, 0xd3, 0x85, 0x34, 0x2e,
	0x4a, 0xac, 0x0b, 0xd7, 0x04, 0xba, 0x50, 0x8a, 0x31, 0xc3, 0x82, 0xa5, 0x81, 0x72, 0x1c, 0x26,
	0x69, 0x3b, 0x64, 0x66, 0x20, 0xe1, 0x69, 0x5c, 0xf9, 0x9e, 0xa6, 0xad, 0xa5, 0x35, 0xc1, 0xc4,
	0xe5, 0x77, 0x6e, 0xdf, 0x65, 0x06, 0x86, 0xa9, 0xcc, 0x84, 0x91, 0xca, 0x3f, 0x2b, 0x69, 0x24,
	0xed, 0xfe, 0x81, 0xd3, 0x4f, 0x5c, 0x98, 0xd3, 0xe5, 0xe0, 0xc7, 0x32, 0x9d, 0x1f, 0x94, 0x34,
	0x27, 0x54, 0x89, 0xe4, 0x22, 0x9e, 0x1f, 0x85, 0x8e, 0xe5, 0x15, 0xd5, 0x6d, 0x5e, 0x6c, 0xd4,
	0xb8, 0xbc, 0xe0, 0x7e, 0x80, 0xce, 0x52, 0x66, 0x3f, 0x04, 0xa7, 0x33, 0x78, 0x4a, 0x24, 0xd7,
	0x36, 0x71, 0x2c, 0x6f, 0x10, 0xbc, 0xf0, 0x2b, 0xa6, 0x0d, 0x6a, 0xbd, 0xe7, 0x18, 0x49, 0xce,
	0x8a, 0x01, 0xf7, 0x27, 0x01, 0xa8, 0x8b, 0xd4, 0x87, 0x36, 0x66, 0x46, 0xdd, 0x6c, 0xe2, 0x10,
	0x6f, 0x10, 0xd8, 0x7e, 0x4d, 0xc1, 0x90, 0x0b, 0x6d, 0xd4, 0x2d, 0xcc, 0xfb, 0xac, 0x1c, 0xa3,
	0x36, 0x74, 0xd3, 0x72, 0xdb, 0x7e, 0xe6, 0x10, 0xaf, 0xcf, 0x2a, 0x48, 0xdf, 0x00, 0x18, 0x91,
	0xa2, 0x36, 0xfb, 0xf4, 0xac, 0x6d, 0xcb, 0x21, 0x9e, 0xc5, 0x1a, 0x15, 0x3a, 0x83, 0x76, 0x82,
	0x57, 0x4c, 0xec, 0x27, 0x87, 0x78, 0xa3, 0xe0, 0xf9, 0x5d, 0x62, 0x24, 0x79, 0x94, 0x37, 0x58,
	0xd9, 0x77, 0xbf, 0xc0, 0x24, 0x92, 0x7c, 0xa7, 0x84, 0x41, 0x86, 0xfa, 0x2c, 0x33, 0x8d, 0x39,
	0xad, 0xbe, 0xc4, 0x31, 0x6a, 0x5d, 0x08, 0xed, 0xb1, 0x0a, 0xd2, 0xd7, 0xd0, 0xbf, 0x93, 0x14,
	0x92, 0x2c, 0x56, 0x17, 0xdc, 0x05, 0xbc, 0x6c, 0x24, 0x80, 0xfb, 0xe3, 0xfd, 0xe2, 0xff, 0x06,
	0xf6, 0xfe, 0x1d, 0xf4, 0x2a, 0x85, 0x74, 0x00, 0xdd, 0xd5, 0xe7, 0xed, 0x72, 0xc1, 0x56, 0x93,
	0x16, 0x1d, 0x42, 0x7f, 0x1d, 0x86, 0xdf, 0xbe, 0xef, 0xc2, 0x70, 0x3d, 0x21, 0xc1, 0x2f, 0x02,
	0xa3, 0x4d, 0x79, 0x64, 0x8b, 0xea, 0x2a, 0x62, 0xa4, 0x4b, 0x18, 0x17, 0x36, 0x1a, 0x79, 0x3f,
	0x22, 0x9a, 0xbe, 0x6a, 0x66, 0xf1, 0x97, 0x71, 0xb7, 0x45, 0xbf, 0xc2, 0x38, 0x17, 0x5e, 0x8f,
	0x6b, 0xfa, 0xcf, 0x57, 0x9a, 0xbe, 0x7d, 0xe4, 0xa3, 0x61, 0xdb, 0x6d, 0x1d, 0x3a, 0xc5, 0xd7,
	0xf9, 0xf8, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x91, 0x70, 0x94, 0x24, 0x8d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitorServiceClient is the client API for MonitorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorServiceClient interface {
	WriteMessageLog(ctx context.Context, in *MessageLog, opts ...grpc.CallOption) (*LogWriteResponse, error)
	ReadMessageLogs(ctx context.Context, in *proto1.RegistryEntry, opts ...grpc.CallOption) (*MessageLogReadResponse, error)
}

type monitorServiceClient struct {
	cc *grpc.ClientConn
}

func NewMonitorServiceClient(cc *grpc.ClientConn) MonitorServiceClient {
	return &monitorServiceClient{cc}
}

func (c *monitorServiceClient) WriteMessageLog(ctx context.Context, in *MessageLog, opts ...grpc.CallOption) (*LogWriteResponse, error) {
	out := new(LogWriteResponse)
	err := c.cc.Invoke(ctx, "/monitor.MonitorService/WriteMessageLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *monitorServiceClient) ReadMessageLogs(ctx context.Context, in *proto1.RegistryEntry, opts ...grpc.CallOption) (*MessageLogReadResponse, error) {
	out := new(MessageLogReadResponse)
	err := c.cc.Invoke(ctx, "/monitor.MonitorService/ReadMessageLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorServiceServer is the server API for MonitorService service.
type MonitorServiceServer interface {
	WriteMessageLog(context.Context, *MessageLog) (*LogWriteResponse, error)
	ReadMessageLogs(context.Context, *proto1.RegistryEntry) (*MessageLogReadResponse, error)
}

func RegisterMonitorServiceServer(s *grpc.Server, srv MonitorServiceServer) {
	s.RegisterService(&_MonitorService_serviceDesc, srv)
}

func _MonitorService_WriteMessageLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorServiceServer).WriteMessageLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitor.MonitorService/WriteMessageLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorServiceServer).WriteMessageLog(ctx, req.(*MessageLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _MonitorService_ReadMessageLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.RegistryEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorServiceServer).ReadMessageLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitor.MonitorService/ReadMessageLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorServiceServer).ReadMessageLogs(ctx, req.(*proto1.RegistryEntry))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitor.MonitorService",
	HandlerType: (*MonitorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WriteMessageLog",
			Handler:    _MonitorService_WriteMessageLog_Handler,
		},
		{
			MethodName: "ReadMessageLogs",
			Handler:    _MonitorService_ReadMessageLogs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitor.proto",
}
